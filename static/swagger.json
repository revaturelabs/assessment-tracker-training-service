{
  "openapi": "3.0.0",
  "info": {
    "description": "The Assessment Tracker is an application designed to help track an individual's progress through a batch training. A user can see all the batches organized by year, view a particular week for a batch, create new assessments, and organize assessments into types. Each assessment is assigned a weight to contribute to the final grade, and associates that complete a given assignment are given a grade in the application.",
    "version": "1.0.0",
    "title": "Assessment-Tracker-Python-Endpoints",
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:5000"
    }
  ],
  "tags": [
    {
      "name": "admin",
      "description": "Administrators manage other users. They can create associates, trainers, and batches."
    },
    {
      "name": "instructor",
      "description": "Instructors run batches. They must be able to access their batch information."
    }
  ],
  "paths": {
    "/notes": {
      "get": {
        "tags": ["instructor"],
        "summary": "Gets all notes and returns a Note array",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request!"
          }
        }
      },
      "post": {
        "tags": ["instructor"],
        "summary": "Create a new Note",
        "requestBody": {
          "description": "Creates a Note object using inputs from JSON",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note successfully created!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/note"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/notes/{note_id}": {
      "parameters": [
        {
          "name": "note_id",
          "in": "path",
          "required": true,
          "description": "Note Id",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["instructor"],
        "summary": "Takes in an id for a Note record and returns a Note object",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/note"
                }
              }
            }
          },
          "400": {
            "description": "Bad request!"
          }
        }
      },
      "put": {
        "tags": ["instructor"],
        "summary": "Updates the note indicated by the Id",
        "requestBody": {
          "description": "Updates a Note object using inputs from JSON",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/note"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Note successfully updated!",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/note"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "tags": ["instructor"],
        "summary": "Removes a Note from the database",
        "responses": {
          "200": {
            "description": "Note successfully deleted!"
          },
          "400": {
            "description": "Bad request."
          }
        }
      }
    },
    "/associates/{associate_id}/notes": {
      "parameters": [
        {
          "name": "associate_id",
          "in": "path",
          "required": true,
          "description": "Associate Id",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["instructor"],
        "summary": "Takes in an id for an Associate and returns an Array of Note objects connected to them",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/note"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request!"
          }
        }
      }
    },
    "/associates/{associate_id}/batches/{batch_id}": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get an associate by associate and batch id.",
        "description": "Get a specific Associate in the batch by their ID and a batch ID.",
        "parameters": [
          {
            "in": "path",
            "name": "associate_id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The associate's id number."
          },
          {
            "in": "path",
            "name": "batch_id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The batch's id number."
          }
        ],
        "responses": {
          "200": {
            "description": "A valid query will return a JSON object representing the associate.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/associate"
                },
                "examples": {
                  "Receive associate": {
                    "value": {
                      "email": "zvv@revature.com",
                      "firstName": "Zachary",
                      "id": 1,
                      "lastName": "Vander Velden",
                      "trainingStatus": "Passed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "If the id can't be found, return a 404 error.",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Id not found": {
                    "value": "No associate could be found with that id and/or batch"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If the inputs are in an unexpected type, return a 400 error.",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "invalid input": {
                    "value": "Not a valid ID or No such batch exist with this ID"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/associates/{associate_id}": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get a specific Associate by their ID",
        "description": "Get a specific Associate by their ID",
        "parameters": [
          {
            "in": "path",
            "name": "associate_id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The associate's id number."
          }
        ],
        "responses": {
          "200": {
            "description": "A successful query returns an associate object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/associate"
                },
                "examples": {
                  "recieve associate": {
                    "value": {
                      "email": "zvv@revature.com",
                      "firstName": "Zachary",
                      "id": 1,
                      "lastName": "Vander Velden",
                      "trainingStatus": "Passed"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "If the id can't be found, return a 404 error.",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Id not found": {
                    "value": "No associate could be found with that id and/or batch"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If the inputs are in an unexpected type, return a 400 error.",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "invalid input": {
                    "value": "Not a valid ID or No such batch exist with this ID"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/associates": {
      "post": {
        "tags": ["instructor"],
        "summary": "Create a new associate in a specified branch.",
        "description": "Create a new associate in a specified branch.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "trainingStatus": {
                    "type": "string"
                  },
                  "batchId": {
                    "type": "integer"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "1": {
                  "value": {
                    "firstName": "Testy",
                    "lastName": "McTesterson",
                    "email": "authentic@test.email",
                    "trainingStatus": "Enthusiastic",
                    "batchId": 1
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "On success, an associate object will be returned with their associate id.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/associate"
                },
                "examples": {
                  "0": {
                    "value": {
                      "email": "authentic@test.email",
                      "firstName": "Testy",
                      "id": 18,
                      "lastName": "McTesterson",
                      "trainingStatus": "Enthusiastic"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "If the id can't be found, return a 404 error.",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "Id not found": {
                    "value": "No associate could be found with that id and/or batch"
                  }
                }
              }
            }
          },
          "400": {
            "description": "If the inputs are in an unexpected type, return a 400 error.",
            "content": {
              "text/html; charset=utf-8": {
                "schema": {
                  "type": "string"
                },
                "examples": {
                  "invalid input": {
                    "value": "Not a valid ID or No such batch exist with this ID"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/batches/{batch_id}/associates": {
      "get": {
        "tags": ["instructor"],
        "summary": "Get all Associates in a batch by the batch ID",
        "description": "Get all Associates in a batch by the batch ID",
        "parameters": [
          {
            "in": "path",
            "name": "batch_id",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "description": "The batch's id number."
          }
        ],
        "responses": {
          "200": {
            "description": "A successful query returns an associate object.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/associate"
                },
                "examples": {
                  "recieve associate": {
                    "value": {
                      "email": "zvv@revature.com",
                      "firstName": "Zachary",
                      "id": 1,
                      "lastName": "Vander Velden",
                      "trainingStatus": "Passed"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/batches": {
      "post": {
        "tags": ["admin"],
        "summary": "Create a new Batch",
        "requestBody": {
          "description": "Creates a Batch object using inputs from JSON",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/createBatch"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Batch successfully created!"
          },
          "400": {
            "description": "Bad request!"
          }
        }
      }
    },
    "/batches/{batch_id}": {
      "parameters": [
        {
          "name": "batch_id",
          "in": "path",
          "required": true,
          "description": "Batch Id",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["admin"],
        "summary": "Takes in an id for a batch record and returns a Batch objec",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/batchResponseBody"
                }
              }
            }
          },
          "400": {
            "description": "Bad request!"
          }
        }
      }
    },
    "/trainers/{trainer_id}/batches?year=2021": {
      "parameters": [
        {
          "name": "trainer_id",
          "in": "path",
          "required": true,
          "description": "Trainer Id",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "year",
          "in": "query",
          "required": true,
          "description": "Year",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["admin"],
        "summary": "Get a list of batches associated with the given trainer for the given year",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/batchResponseBody"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request!"
          }
        }
      }
    },
    "/trainers/{trainer_id}/batches?track=trackName": {
      "parameters": [
        {
          "name": "trainer_id",
          "in": "path",
          "required": true,
          "description": "Trainer Id",
          "schema": {
            "type": "integer"
          }
        },
        {
          "name": "track",
          "in": "query",
          "required": true,
          "description": "Training Track",
          "schema": {
            "type": "string"
          }
        }
      ],
      "get": {
        "tags": ["admin"],
        "summary": "Get a list of batches associated with the given trainer for the given track",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/batchResponseBody"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request!"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": ["instructor"],
        "summary": "Login an instructor",
        "requestBody": {
          "description": "Login an instructor using their email",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/loginTrainer"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Trainer successfully logs in"
          },
          "404": {
            "description": "Trainer unsuccessfully logs in"
          }
        }
      }
    },
    "/trainers": {
      "post": {
        "tags": ["admin"],
        "summary": "Create a new trainer.",
        "requestBody": {
          "description": "Create a new trainer.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "1": {
                  "value": {
                    "firstName": "Trainer",
                    "lastName": "McTrainerface",
                    "email": "important@trainer.person"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trainer"
                },
                "examples": {
                  "recieve trainer": {
                    "value": {
                      "email": "important@trainer.person",
                      "firstName": "Trainer",
                      "id": 1,
                      "lastName": "McTrainerface",
                      "role": "",
                      "admin": false
                    }
                  }
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "admin"
        ],
        "summary": "Get a list of all trainers",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/getTrainerResponseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trainers/register": {
      "post": {
        "tags": ["admin"],
        "summary": "Assign trainer to batch.",
        "requestBody": {
          "description": "Create a new trainer-batch join relationship.",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "trainerId": {
                    "type": "integer"
                  },
                  "batchId": {
                    "type": "integer"
                  },
                  "trainerRole": {
                    "type": "string"
                  }
                }
              },
              "examples": {
                "1": {
                  "value": {
                    "trainerId": 1,
                    "batchId": 1,
                    "trainerRole": "Lead"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/trainer"
                },
                "examples": {
                  "recieve trainer": {
                    "value": {
                      "email": "important@trainer.person",
                      "firstName": "Trainer",
                      "id": 1,
                      "lastName": "McTrainerface",
                      "role": "Lead",
                      "admin": false
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/trainers/{trainer_id}": {
      "parameters": [
        {
          "name": "trainer_id",
          "in": "path",
          "required": true,
          "description": "Trainer Id",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["admin"],
        "summary": "Takes in an id and returns a Trainer",
        "responses": {
          "200": {
            "description": "Trainer found successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/getTrainerResponseBody"
                }
              }
            }
          },
          "404": {
            "description": "Trainer not found"
          },
          "400": {
            "description": "Bad request!"
          }
        }
      }
    },
    "/batches/{batch_id}/trainers": {
      "parameters": [
        {
          "name": "batch_id",
          "in": "path",
          "required": true,
          "description": "Batch Id",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["admin"],
        "summary": "Takes in an id for a batch record and returns a Trainer or trainers",
        "responses": {
          "200": {
            "description": "Successfully found Trainer(s)",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/getTrainerResponseBody"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/years?trainerId=1": {
      "parameters": [
        {
          "name": "trainerId",
          "in": "path",
          "required": true,
          "description": "Trainer Id",
          "schema": {
            "type": "integer"
          }
        }
      ],
      "get": {
        "tags": ["admin"],
        "summary": "returns the years a trainer was active",
        "responses": {
          "200": {
            "description": "Returns the years a trainer was active based on the Id provided",
            "content": {
              "application/json": {
                "type": "array",
                "items": {
                  "type": "integer"
                }
              }
            }
          },
          "400": {
            "description": "Bad request!"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "createBatch": {
        "properties": {
          "name": {
            "type": "string"
          },
          "trainingTrack": {
            "type": "string"
          },
          "startDate": {
            "type": "number"
          },
          "endDate": {
            "type": "number"
          }
        }
      },
      "batchResponseBody": {
        "properties": {
          "currentWeek": {
            "type": "number"
          },
          "endDate": {
            "type": "number"
          },
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "startDate": {
            "type": "number"
          },
          "totalWeeks": {
            "type": "number"
          },
          "trainingTrack": {
            "type": "string"
          }
        }
      },
      "getTrainerResponseBody": {
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string"
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          }
        }
      },
      "associate": {
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "trainingStatus": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          }
        }
      },
      "loginTrainer": {
        "properties": {
          "email": {
            "type": "string"
          }
        }
      },
      "note": {
        "properties": {
          "id": {
            "type": "number"
          },
          "batchId": {
            "type": "number"
          },
          "associateId": {
            "type": "number"
          },
          "weekNumber": {
            "type": "number"
          },
          "cont": {
            "type": "string"
          }
        }
      },
      "trainer": {
        "properties": {
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "role": {
            "type": "string"
          },
          "id": {
            "type": "integer"
          },
          "email": {
            "type": "string"
          },
          "admin": {
            "type": "boolean"
          }
        }
      }
    }
  }
}
